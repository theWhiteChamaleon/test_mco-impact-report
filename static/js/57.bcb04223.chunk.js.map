{"version":3,"file":"static/js/57.bcb04223.chunk.js","mappings":"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","sources":["pages/MCOImpactReport/MCOImpactReportPartRevTable.jsx","pages/MCOImpactReport/MCOImpactReportMBOMConnectionTable.jsx","pages/MCOImpactReport/dataHelpers.js","pages/MCOImpactReport/DragAndDrop.jsx","pages/MCOImpactReport/MBOMImpactReport.jsx","pages/MCOImpactReport/MBOMImpactReportIndex.js"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport './MCOTables.css';\r\n\r\nconst MCOImpactReportPartRevTable = ({ columns, data }) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 10;\r\n\r\n  // Filtered data\r\n  const filteredData = useMemo(() => {\r\n    return data.filter((row) =>\r\n      columns.some((col) =>\r\n        String(row[col.accessorKey])\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase())\r\n      )\r\n    );\r\n  }, [searchText, data, columns]);\r\n\r\n  // Paginated data\r\n  const paginatedData = useMemo(() => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    return filteredData.slice(startIndex, startIndex + itemsPerPage);\r\n  }, [filteredData, currentPage]);\r\n\r\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\r\n\r\n  const handleExport = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(filteredData);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\r\n\r\n    const excelBuffer = XLSX.write(workbook, {\r\n      bookType: \"xlsx\",\r\n      type: \"array\",\r\n    });\r\n\r\n    const blob = new Blob([excelBuffer], {\r\n      type: \"application/octet-stream\",\r\n    });\r\n    saveAs(blob, \"exported-data.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 mt-3\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control w-50\"\r\n          placeholder=\"Search...\"\r\n          value={searchText}\r\n          onChange={(e) => {\r\n            setSearchText(e.target.value);\r\n            setCurrentPage(1);\r\n          }}\r\n        />\r\n        <button className=\"btn btn-success\" onClick={handleExport}>\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table custom-table table-hover\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              {columns.map((col) => (\r\n                <th key={col.accessorKey}>{col.header}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {paginatedData.length > 0 ? (\r\n              paginatedData.map((row, idx) => (\r\n                <tr key={idx}>\r\n                  {columns.map((col) => (\r\n                    <td key={col.accessorKey}>{row[col.accessorKey]}</td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={columns.length} className=\"text-center\">\r\n                  No data found.\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n        <p className=\"mb-0\">\r\n          Showing {(currentPage - 1) * itemsPerPage + 1} to{\" \"}\r\n          {Math.min(currentPage * itemsPerPage, filteredData.length)} of{\" \"}\r\n          {filteredData.length} entries\r\n        </p>\r\n\r\n        <div>\r\n          <button\r\n            className=\"btn btn-outline-primary mx-1\"\r\n            disabled={currentPage === 1}\r\n            onClick={() => setCurrentPage((prev) => prev - 1)}\r\n          >\r\n            Prev\r\n          </button>\r\n          <span>{currentPage}</span>\r\n          <button\r\n            className=\"btn btn-outline-primary mx-1\"\r\n            disabled={currentPage === totalPages}\r\n            onClick={() => setCurrentPage((prev) => prev + 1)}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCOImpactReportPartRevTable;\r\n","import React, { useMemo, useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport './MCOTables.css';\r\n\r\nconst MCOImpactReportMBOMConnectionTable = ({ columns, data }) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 10;\r\n\r\n  // Filtered data\r\n  const filteredData = useMemo(() => {\r\n    return data.filter((row) =>\r\n      columns.some((col) =>\r\n        String(row[col.accessorKey])\r\n          .toLowerCase()\r\n          .includes(searchText.toLowerCase())\r\n      )\r\n    );\r\n  }, [searchText, data, columns]);\r\n\r\n  // Paginated data\r\n  const paginatedData = useMemo(() => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    return filteredData.slice(startIndex, startIndex + itemsPerPage);\r\n  }, [filteredData, currentPage]);\r\n\r\n  const totalPages = Math.ceil(filteredData.length / itemsPerPage);\r\n\r\n//   const handleExport = () => {\r\n//     const worksheet = XLSX.utils.json_to_sheet(filteredData);\r\n//     const workbook = XLSX.utils.book_new();\r\n//     XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\r\n\r\n//     const excelBuffer = XLSX.write(workbook, {\r\n//       bookType: \"xlsx\",\r\n//       type: \"array\",\r\n//     });\r\n\r\n//     const blob = new Blob([excelBuffer], {\r\n//       type: \"application/octet-stream\",\r\n//     });\r\n//     saveAs(blob, \"exported-data.xlsx\");\r\n//   };\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0 mt-3\">\r\n      {/* <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control w-50\"\r\n          placeholder=\"Search...\"\r\n          value={searchText}\r\n          onChange={(e) => {\r\n            setSearchText(e.target.value);\r\n            setCurrentPage(1);\r\n          }}\r\n        />\r\n        <button className=\"btn btn-success\" onClick={handleExport}>\r\n          Export to Excel\r\n        </button>\r\n      </div> */}\r\n\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table custom-table table-hover\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              {columns.map((col) => (\r\n                <th key={col.accessorKey}>{col.header}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {paginatedData.length > 0 ? (\r\n              paginatedData.map((row, idx) => (\r\n                <tr key={idx}>\r\n                  {columns.map((col) => (\r\n                    <td key={col.accessorKey}>{row[col.accessorKey]}</td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={columns.length} className=\"text-center\">\r\n                  No data found.\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n        <p className=\"mb-0\">\r\n          Showing {(currentPage - 1) * itemsPerPage + 1} to{\" \"}\r\n          {Math.min(currentPage * itemsPerPage, filteredData.length)} of{\" \"}\r\n          {filteredData.length} entries\r\n        </p>\r\n\r\n        <div>\r\n          <button\r\n            className=\"btn btn-outline-primary mx-1\"\r\n            disabled={currentPage === 1}\r\n            onClick={() => setCurrentPage((prev) => prev - 1)}\r\n          >\r\n            Prev\r\n          </button>\r\n          <span>{currentPage}</span>\r\n          <button\r\n            className=\"btn btn-outline-primary mx-1\"\r\n            disabled={currentPage === totalPages}\r\n            onClick={() => setCurrentPage((prev) => prev + 1)}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MCOImpactReportMBOMConnectionTable;\r\n","// pages/revisionFloat/dataHelpers.js\r\nimport { FaRegCopy } from \"react-icons/fa\";\r\nimport { AiOutlineClose } from \"react-icons/ai\"; // Ant Design Icons (React Icons)\r\n\r\nexport const PlantRenderer = ({\r\n  plants = [],\r\n  itemId,\r\n  isRemoveMode,\r\n  handleRemovePlant,\r\n}) => {\r\n  console.log(\"PlantRenderer received plants:\", plants); // Debugging\r\n  if (!plants?.length) return \"N/A\";\r\n\r\n  return (\r\n    <>\r\n      {plants.map((plant) => (\r\n        <span\r\n          key={plant.PlantID}\r\n          style={{\r\n            marginRight: \"8px\",\r\n            display: \"inline-flex\",\r\n            alignItems: \"center\",\r\n            color: plant.color || \"black\", // Apply red or green based on color property\r\n            fontWeight: \"bold\", // Optional: Make it more visible\r\n          }}\r\n        >\r\n          {plant.PlantName}\r\n          {isRemoveMode && plant.PlantERPStatus === \"Pending\" && (\r\n            <AiOutlineClose\r\n              size={16}\r\n              style={{ cursor: \"pointer\", color: \"red\", marginLeft: \"4px\" }}\r\n              onClick={() => handleRemovePlant(itemId, plant.PlantID)}\r\n            />\r\n          )}\r\n        </span>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getCardData = (droppedObjectData) => {\r\n  if (!droppedObjectData || !droppedObjectData.cardData) {\r\n    return null;\r\n  }\r\n\r\n  const item = droppedObjectData.cardData;\r\n\r\n  let cardData = {\r\n    title: item.Title || \"N/A\",\r\n    type: item.Type || \"N/A\",\r\n    \"Maturity State\": item[\"Maturity State\"] || \"N/A\",\r\n    owner: item.Owner || \"N/A\",\r\n    \"Collaborative Space Title\": item[\"Collaborative Space Title\"] || \"N/A\",\r\n    Description: item.Description || \"N/A\",\r\n    \"Dropped Revision\": item[\"Dropped Revision\"] || \"N/A\",\r\n    \"Latest Released Revision\": item[\"Latest Released Revision\"] || \"N/A\",\r\n    \"CAD Format\": item[\"CAD Format\"] || \"N/A\",\r\n    imageURL:\r\n      item.imageURL ||\r\n      \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/snresources/images/icons/large/I_VPMNavProduct108x144.png\", // You might want a placeholder image URL\r\n  };\r\n\r\n  if (item.Type !== \"Document\") {\r\n    cardData.EIN = item.EIN || \"N/A\";\r\n    cardData[\"CAD Format\"] = item[\"CAD Format\"] || \"N/A\";\r\n  }\r\n  return cardData;\r\n};\r\n\r\nexport const getTableData = (tableData, type, CAData) => {\r\n  console.log(\"cadata datahelpers\",CAData );\r\n  \r\n  if (!tableData) return [];\r\n\r\n  return tableData.map((data) => {\r\n    if (type === \"Change Action\") {\r\n      return {\r\n        ItemName: data?.ItemTitle || \"N/A\",\r\n        ItemRev: data?.ItemRev || \"N/A\",\r\n        ItemType: data?.ItemType || \"N/A\",\r\n        ItemId: data?.ItemId || \"N/A\", // ✅ Added to be accessible in `tableColumns`\r\n      };\r\n    } else {\r\n      console.log(\"change data datahelper\", data?.Change || CAData.CAName ||\"N/A\");\r\n       \r\n      return {\r\n        Plant: data?.title || \"N/A\",\r\n        Seq: data?.Seq || \"1\",\r\n        Status: data?.PlantStatus || \"Pending\",\r\n        \"MFG Change\": data?.MFGChange || \"N/A\",\r\n        \"MFG Status\": data?.MFGStatus || \"N/A\",\r\n        Change: data?.Change || CAData.CAName ||\"N/A\",\r\n        \"Change Status\": data?.ChangeStatus || CAData.CAStatus ||\"N/A\",\r\n        \"Oracle Template\": data.OracleTemplate || \"N/A\",\r\n        \"ERP Status\": \"Active\" || \"N/A\",\r\n        \"ERP Export\": \"Yes\" || \"N/A\",\r\n        \"Lead Plant\": false,\r\n        MBom: data.MBOM ? \"Make\" : \"Buy\" || \"N/A\",\r\n        \"Sort Value\": \"\",\r\n      };\r\n    }\r\n  });\r\n};\r\n\r\nexport const getUniqueTableData = (uniqueData) => {\r\n  if (!uniqueData) return [];\r\n  return uniqueData.map((plant) => ({\r\n    \"Available Plant\": plant?.title || \"N/A\",\r\n  }));\r\n};\r\n\r\nexport const tableColumns = (CAName, type, isRemoveMode, handleRemovePlant) => {\r\n  console.log(\"type here is: \", type);\r\n  if (type === \"Change Action\") {\r\n    return [\r\n      { accessorKey: \"ItemName\", header: \"Name\" },\r\n      { accessorKey: \"ItemRev\", header: \"Rev\" },\r\n      { accessorKey: \"ItemType\", header: \"Type\" },\r\n      { accessorKey: \"ItemPolicy\", header: \"Policy\"},\r\n      { accessorKey: \"ItemMakeBuy\", header: \"Make/Buy\" },\r\n      { accessorKey: \"ItemSeq\", header: \"Sequence\" },\r\n      { accessorKey: \"ItemPrevSeqMCO\", header: \"Prev. Seq. MCO\" },\r\n      { accessorKey: \"ItemPrevSeqStartDate\", header: \"Prev. Seq. Start Date\" },\r\n      { accessorKey: \"ItemNextSeqMCO\", header: \"Next Seq MCO\" },\r\n      { accessorKey: \"ItemNextSeqStartDate\", header: \"Next Seq Start Date\" },\r\n    ];\r\n  }\r\n};\r\n\r\n\r\nexport const tableColumnsMBOMConnections = (CAName, type, isRemoveMode, handleRemovePlant) => {\r\n  console.log(\"type here is: \", type);\r\n  if (type === \"Change Action\") {\r\n    return [\r\n      { accessorKey: \"ItemFromPart\", header: \"From Part\" },\r\n      { accessorKey: \"ItemToPart\", header: \"To Part\" },\r\n      { accessorKey: \"ItemFindNumber\", header: \"F/N\" },\r\n      { accessorKey: \"ItemRefDes\", header: \"Ref Des\"},\r\n      { accessorKey: \"ItemMfgUsageCode\", header: \"Manufacturing Usage Code\" },\r\n      { accessorKey: \"ItemSeq\", header: \"Sequence\" },\r\n      { accessorKey: \"ItemPrevSeqMCO\", header: \"Prev. Seq. MCO\" },\r\n      { accessorKey: \"ItemPrevSeqStartDate\", header: \"Prev. Seq. Start Date\" },\r\n      { accessorKey: \"ItemNextSeqMCO\", header: \"Next Seq MCO\" },\r\n      { accessorKey: \"ItemNextSeqStartDate\", header: \"Next Seq Start Date\" },\r\n      { accessorKey: \"ItemChildMCO\", header: \"Child MCO\" },\r\n      { accessorKey: \"ItemChildStartDate\", header: \"Child Start Date\" },\r\n    ];\r\n  }\r\n};\r\n\r\nexport const uniqueColumns = [\r\n  { accessorKey: \"Available Plant\", header: \"Available Plant\" },\r\n];\r\n\r\n\r\nexport function processErrorObj(\r\n  errorObj,\r\n  assignedPlant,\r\n  updatedAssignedClasses,\r\n  uniquePlant\r\n) {\r\n  console.log(\"Assigned Plants are:\", assignedPlant);\r\n  console.log(\"unique Plants are:\", uniquePlant);\r\n  errorObj.forEach((item) => {\r\n    if (item.type === \"New\") {\r\n      // Remove from assignedPlant\r\n\r\n      updatedAssignedClasses = updatedAssignedClasses.filter(\r\n        (plant) => plant.title !== item.title\r\n      );\r\n\r\n      // Add to uniquePlant if not already present\r\n      if (!uniquePlant.some((plant) => plant.title === item.title)) {\r\n        uniquePlant.push(item);\r\n      }\r\n    } else if (item.type === \"Update\") {\r\n      // Modify mbom to \"buy\" in assignedPlant\r\n      updatedAssignedClasses = updatedAssignedClasses.map((plant) =>\r\n        plant.title === item.title ? { ...plant, MBOM: \"false\" } : plant\r\n      );\r\n    }\r\n  });\r\n\r\n  // Update the table (assuming a render function exists)\r\n\r\n  return { updatedAssignedClasses, uniquePlant };\r\n}\r\n\r\nexport const formattedFinalMessage = (finalMessage) => {\r\n  if (!finalMessage) return \"An error occurred.\";\r\n\r\n  const messageList = finalMessage\r\n    .split(\"\\n\")\r\n    .filter((msg) => msg.trim() !== \"\");\r\n\r\n  const handleCopy = () => {\r\n    const textToCopy = messageList.map((msg) => `- ${msg}`).join(\"\\n\");\r\n    navigator.clipboard.writeText(textToCopy);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        userSelect: \"text\",\r\n        cursor: \"text\",\r\n        position: \"relative\",\r\n        paddingRight: \"40px\",\r\n      }}\r\n    >\r\n      <strong>Errors:</strong>\r\n      <button\r\n        onClick={handleCopy}\r\n        style={{\r\n          position: \"absolute\",\r\n          right: \"10px\",\r\n          top: \"-12px\",\r\n          background: \"none\",\r\n          border: \"none\",\r\n          cursor: \"pointer\",\r\n          fontSize: \"16px\",\r\n          color: \"grey\",\r\n        }}\r\n      >\r\n        <FaRegCopy size={12} />\r\n      </button>\r\n      <ol>\r\n        {messageList.map((msg, index) => (\r\n          <li key={index}>{msg}</li>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"../../components/DragAndDrop/DragAndDrop.css\"; // Import styles for the component\r\nimport { Button, Form, Image } from \"react-bootstrap\";\r\nimport SearchInput from \"../../components/SearchInput/SearchInput\";\r\nimport useInterComSearch from \"../../hooks/useInterComSearch\";\r\nimport usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faRotateLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./MBOMImpactReport.css\";\r\n\r\nconst DragAndDropComponent = ({\r\n  handleFileInputChange,\r\n  fileInputRef,\r\n  isFileInputDisabled,\r\n  handleSubmit,\r\n  isCreateButtonDisabled,\r\n  handleReset,\r\n}) => {\r\n  const { handleDrop } = usePlantDropableArea();\r\n  const { performSearch } = useInterComSearch();\r\n\r\n\r\n  const handleSearch = (searchText) => {\r\n    const searchOpts = {\r\n      title: \"Search\",\r\n      role: \"\",\r\n      mode: \"furtive\",\r\n      default_with_precond: true,\r\n      precond:\r\n        'flattenedtaxonomies:\"types/VPMReference\" OR flattenedtaxonomies:\"types/Raw_Material\" OR flattenedtaxonomies:\"types/Document\"',\r\n      show_precond: false,\r\n      multiSel: false,\r\n      idcard_activated: false,\r\n      select_result_max_idcard: false,\r\n      itemViewClickHandler: \"\",\r\n      search_delegation: \"3dsearch\",\r\n    };\r\n\r\n    const handleSearchResults = (selectedObjects) => {\r\n      console.log(\"Selected objects:\", selectedObjects);\r\n      console.log(\"objectId: selectedObjects[0].id\", selectedObjects[0].id);\r\n      if (\r\n        selectedObjects &&\r\n        selectedObjects.length > 0 &&\r\n        selectedObjects[0].id\r\n      ) {\r\n        handleDrop([\r\n          {\r\n            objectId: selectedObjects[0].id,\r\n            objectType: selectedObjects[0][\"ds6w:type_value\"],\r\n          },\r\n        ]);\r\n      } else {\r\n        console.warn(\"No objectId found in selected objects\");\r\n      }\r\n    };\r\n\r\n    performSearch(searchText, searchOpts, handleSearchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"droppable-container mt-4\">\r\n        <Image\r\n          style={{ width: \"90px\", height: \"65px\" }}\r\n          src=\"https://thewhitechamaleon.github.io/testrapp/images/drag.png\"\r\n          alt=\"Data Collect\"\r\n          // className=\"search-icon\"\r\n        />\r\n        <span className=\"drag-and-drop-text\">Drag and Drop</span>\r\n        {/* <div className=\"divider-container\">\r\n          <hr className=\"divider\" />\r\n          <span className=\"divider-text\">or</span>\r\n          <hr className=\"divider\" />\r\n        </div> */}\r\n        {/* <SearchInput onSearch={handleSearch} /> */}\r\n        <div class=\"mt-3\">\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-6 col-md-auto mb-2\">\r\n              {/* <Button\r\n                variant=\"link ms-auto\"\r\n                onClick={() => {\r\n                  const link = document.createElement(\"a\");\r\n                  link.href =\r\n                    \"https://github.com/aayush825/EMR_PLANT_WIDGET/raw/main/plant_assignment_template.xlsx\"; // Use the raw file URL for direct download\r\n                  link.download = \"plant_assignment_template.xlsx\"; // Set the file name for the download\r\n                  link.click();\r\n                }}\r\n              >\r\n                Download Template\r\n              </Button> */}\r\n            </div>\r\n            <div class=\"col-6 col-md-auto mb-2\">\r\n              {/* <Form.Group controlId=\"formFileMultiple\">\r\n                <Form.Control\r\n                  type=\"file\"\r\n                  multiple\r\n                  onChange={handleFileInputChange}\r\n                  disabled={isFileInputDisabled}\r\n                  ref={fileInputRef} // Attach the ref to the file input\r\n                />\r\n              </Form.Group> */}\r\n            </div>\r\n            {/* <div class=\"col-6 col-md-auto mb-2\">\r\n              <Button variant=\"outline-danger\" onClick={handleReset}>\r\n                <FontAwesomeIcon icon={faRotateLeft} />\r\n              </Button>\r\n            </div> */}\r\n            {/* <div class=\"col-6 col-md-auto mb-2\">\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  cursor: isCreateButtonDisabled ? \"not-allowed\" : \"pointer\", // Apply cursor style to the wrapper div\r\n                }}\r\n              >\r\n                <Button\r\n                  // variant=\"outline-primary\"\r\n                  variant={\r\n                    isCreateButtonDisabled ? \"secondary\" : \"outline-primary\"\r\n                  }\r\n                  onClick={handleSubmit}\r\n                  disabled={isCreateButtonDisabled} // Disable the button\r\n                >\r\n                  Create Manufacturing CA\r\n                </Button>\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAndDropComponent;\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n  useRef,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CardComponent from \"../../components/Card/Card\";\r\nimport { Button, Form, Image } from \"react-bootstrap\";\r\nimport \"./MBOMImpactReport.css\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport MCOImpactReportPartRevTable from \"./MCOImpactReportPartRevTable\";\r\nimport MCOImpactReportMBOMConnectionTable from \"./MCOImpactReportMBOMConnectionTable\";\r\nimport CardWithDragAndDrop from \"../../components/Card/cardwithdraganddrop\";\r\nimport store from \"../../store\";\r\nimport { refreshWidgetData } from \"../../services/api/refreshService\";\r\n\r\nimport { FaRegCopy } from \"react-icons/fa\";\r\nimport {\r\n  setCAItemDetails,\r\n  setCAItemObjectDetails,\r\n  setDroppedObjectData,\r\n  setIsDropped,\r\n  setPlantObjectData,\r\n} from \"../../store/droppedObjectSlice\";\r\nimport {\r\n  formattedFinalMessage,\r\n  getCardData,\r\n  getTableData,\r\n  getUniqueTableData,\r\n  processErrorObj,\r\n  tableColumns,\r\n  uniqueColumns,\r\n  tableColumnsMBOMConnections,\r\n} from \"./dataHelpers\";\r\nimport useToast, { useToastWithProgress } from \"../../hooks/useToast\";\r\n// import { MSG_WIDGET_RESET_SUCCESS } from \"../../utils/toastMessages\";\r\nimport usePlantDropableArea from \"../../hooks/usePlantDropableArea\";\r\nimport {\r\n  handleAddData,\r\n  handleRemoveData,\r\n  saveData,\r\n} from \"../../services/api/PlantAssignment/saveTableDataService\";\r\nimport MBOMImpactReportToolbarNativeCta from \"./MBOMImpactReportToolbarNativeCta\";\r\nimport { MSG_SAVE_FAILURE, MSG_SAVE_SUCCESS } from \"../../utils/toastMessages\";\r\nimport DragAndDropComponent from \"./DragAndDrop\";\r\nimport * as XLSX from \"xlsx\";\r\nimport ContentErrorsModal from \"../../components/Modals/ContentErrorsModal\";\r\nimport { getAllPlants } from \"../../services/api/PlantAssignment/allPlantSevice\";\r\nimport axios from \"axios\";\r\nimport { fetchCsrfToken } from \"../../services/api/PlantAssignment/fetchCsrfService\";\r\nimport {\r\n  handleFileChange,\r\n  processManufacturingCA,\r\n} from \"../../services/api/PlantAssignment/createMFGCA\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faRotateLeft } from \"@fortawesome/free-solid-svg-icons\"; // This is the reset-style icon\r\nimport { fetchData } from \"../../utils/helpers\";\r\n\r\nconst MBOMImpactReport = () => {\r\n  const { showSuccessToastWithProgress, showErrorToastWithProgress } =\r\n    useToastWithProgress();\r\n  const [isAddingPlant, setIsAddingPlant] = useState(false); // State for loader\r\n  const [validatedData, setValidatedData] = useState(null);\r\n  const [showErrorsModal, setShowErrorsModal] = useState(false);\r\n  const [validationErrors, setValidationErrors] = useState([]); // State to store validation errors\r\n  const { initializeDroppableArea, loading } = usePlantDropableArea();\r\n  const [tableKey, setTableKey] = useState(0);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [assignedPlant, setAssignedPlant] = useState([]);\r\n  const [selectedFiles, setSelectedFiles] = useState(null);\r\n  const [uniqueData, setUniqueData] = useState([]);\r\n  const [CAItemDetailsTable, setCAItemDetailsTable] = useState([]);\r\n  const [isFileInputDisabled, setIsFileInputDisabled] = useState(false); // New state to disable file input\r\n  const [isCreateButtonDisabled, setIsCreateButtonDisabled] = useState(true); // New state to control button enablement\r\n  const { handleDrop } = usePlantDropableArea(); // 🔁 same as WidgetLifecycle\r\n\r\n  // const [addedItem, setAddedItem] = useState([]);\r\n  const [isTableLoading, setIsTableLoading] = useState(false);\r\n  const [screenLoader, setScreenLoader] = useState(false);\r\n  const [isCardDataAvailable, setIsCardDataAvailable] = useState(false);\r\n  const [isRemoveMode, setIsRemoveMode] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { showSuccessToast, showErrorToast } = useToast();\r\n  let securityContext1 = window.widget.getValue(\"Credentials\");\r\n  console.log(\"Security context is: \", securityContext1);\r\n\r\n  const fileInputRef = useRef(null); // Create a ref for the file input\r\n\r\n  const handleFileInputChange = (event) => {\r\n    handleFileChange(\r\n      event,\r\n      setValidationErrors,\r\n      setShowErrorsModal,\r\n      showErrorToast, // Pass toast functions\r\n      showSuccessToast,\r\n      setValidatedData,\r\n      setSelectedFiles,\r\n      setIsCreateButtonDisabled\r\n    ).finally(() => {\r\n      setScreenLoader(false); // Hide loader after validation is complete\r\n    });\r\n\r\n    setIsFileInputDisabled(true);\r\n    // setIsCreateButtonDisabled(false); // Enable the \"Create Manufacturing CA\" button\r\n  };\r\n\r\n  // NEED TO WORK HERE FOR THE UNIQUE PLANTS FOR CA\r\n\r\n  const handleRemovePlant = useCallback(\r\n    (itemId, plantId) => {\r\n      setCAItemDetailsTable((tableData) =>\r\n        tableData.map((item) =>\r\n          item.ItemId === itemId\r\n            ? {\r\n                ...item,\r\n                ItemPlants: item.ItemPlants.map((plant) =>\r\n                  plant.PlantID === plantId\r\n                    ? {\r\n                        ...plant,\r\n                        color: plant.color === \"red\" ? \"green\" : \"red\", // ✅ toggle\r\n                      }\r\n                    : plant\r\n                ),\r\n              }\r\n            : item\r\n        )\r\n      );\r\n    },\r\n    [setCAItemDetailsTable]\r\n  );\r\n\r\n  // Access Redux store\r\n  const droppedObjectData = useSelector(\r\n    (state) => state.droppedObject.droppedObjectData\r\n  );\r\n  console.log(\"droppedObjectData\", droppedObjectData);\r\n\r\n  // Getting the CA dETAILS FROM rEDUX\r\n\r\n  const CAItemDetails = useSelector(\r\n    (state) => state.droppedObject.CAItemObjectDetails.CAItemDetails\r\n  );\r\n  console.log(\"The CA Item Details are:\", CAItemDetails);\r\n\r\n  const loadingParentDetails = useSelector(\r\n    (state) => state.droppedObject.loadingParentDetails\r\n  );\r\n  console.log(\"Parents Loading State:\", loadingParentDetails);\r\n\r\n  const isDropped = useSelector((state) => state.droppedObject.isDropped);\r\n\r\n  // const handleFileInputChange = (event) => {\r\n  //   handleFileChange(event, allPlants, CAHeaders, setValidationErrors, setShowErrorsModal);\r\n  // };\r\n\r\n  const CAData = useSelector(\r\n    (state) => state.droppedObject.plantObjectData.CAData\r\n  );\r\n  console.log(\"The CAData is....:\", CAData);\r\n\r\n  const CAName = useSelector(\r\n    (state) => state.droppedObject.plantObjectData.CAName\r\n  );\r\n  console.log(\"[plant Assignment] CAName:\", CAName);\r\n\r\n  // Trigger re-render of ReusableTable by changing the key\r\n  useEffect(() => {\r\n    if (tableData.length >= 0) {\r\n      setTableKey((prevKey) => prevKey + 1); // Increment the key to trigger a re-render\r\n    }\r\n  }, [tableData]); // Runs whenever tableData changes\r\n\r\n  if (droppedObjectData.cardData && droppedObjectData.initialDraggedData) {\r\n    var state = droppedObjectData.cardData[\"Maturity State\"];\r\n    var hasMBOM = droppedObjectData.cardData[\"HasMBOM\"];\r\n    var type = droppedObjectData.initialDraggedData?.data?.items[0].objectType;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (type === \"Change Action\") {\r\n      setCAItemDetailsTable(CAItemDetails);\r\n    }\r\n  }, [type, CAItemDetails]);\r\n\r\n  // Effect to initialize the droppable area\r\n  useEffect(() => {\r\n    if (!isDropped) {\r\n      initializeDroppableArea();\r\n    }\r\n  }, [isDropped, initializeDroppableArea]);\r\n\r\n  // Effect to set isTableLoading based on loadingParentDetails\r\n  useEffect(() => {\r\n    setIsTableLoading(loadingParentDetails);\r\n  }, [loadingParentDetails]);\r\n\r\n  // Update table data when droppedObjectData changes\r\n  const newTableData = useMemo(() => {\r\n    return type === \"Change Action\"\r\n      ? getTableData(CAItemDetailsTable, type, CAData)\r\n      : getTableData(assignedPlant, type, CAData);\r\n  }, [CAItemDetailsTable, assignedPlant, type, CAData]);\r\n\r\n  // Process card data\r\n  const cardData = useMemo(\r\n    () => getCardData(droppedObjectData),\r\n    [droppedObjectData]\r\n  );\r\n  console.log(cardData);\r\n\r\n  // Update table data and reset isTableLoading when newTableData changes\r\n  useEffect(() => {\r\n    if (newTableData.length >= 0) {\r\n      console.log(\"New Table Data:\", newTableData);\r\n      setTableData(newTableData);\r\n      setTableKey((prevKey) => prevKey + 1); // Update table key\r\n    }\r\n  }, [newTableData]);\r\n\r\n  useEffect(() => {\r\n    setIsCardDataAvailable(!!cardData);\r\n  }, [cardData]);\r\n\r\n  // Define columns for the Part rev table\r\n  const columns = useMemo(\r\n    () => tableColumns(CAName, type, isRemoveMode, handleRemovePlant),\r\n    [CAName, type, isRemoveMode, handleRemovePlant]\r\n  );\r\n\r\n  // Define columns for the Part rev table\r\n  const MBOMConnectionColumns = useMemo(\r\n    () =>\r\n      tableColumnsMBOMConnections(\r\n        CAName,\r\n        type,\r\n        isRemoveMode,\r\n        handleRemovePlant\r\n      ),\r\n    [CAName, type, isRemoveMode, handleRemovePlant]\r\n  );\r\n\r\n  const handleHomeClick = () => {\r\n    initializeDroppableArea(); // Reset the droppable area\r\n    // dispatch(false);\r\n    dispatch(setIsDropped(false));\r\n    dispatch(\r\n      setDroppedObjectData({\r\n        cardData: {},\r\n        parentDetails: [],\r\n        versions: [],\r\n        initialDraggedData: [],\r\n      })\r\n    ); // Clear Redux state\r\n    dispatch(\r\n      setPlantObjectData({\r\n        allPlants: [],\r\n        initialAssignedPlants: [],\r\n        uniquePlants: [],\r\n        productChildren: [],\r\n        CAName: false,\r\n        headers: {},\r\n        proposedChanges: [],\r\n        CAData: {},\r\n      })\r\n    );\r\n    dispatch(\r\n      setCAItemObjectDetails({\r\n        CAItemDetails: [],\r\n        CAallPlants: [],\r\n        CAisMFGCA: false,\r\n        CAheaders: {},\r\n      })\r\n    );\r\n\r\n    setTableData([]); // Clear local table data\r\n    setIsCardDataAvailable(false);\r\n    // showSuccessToast(MSG_WIDGET_RESET_SUCCESS);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"[MBOMImpactReport] State Changes:\", {\r\n      loading,\r\n      loadingParentDetails,\r\n      isDropped,\r\n    });\r\n  }, [loading, loadingParentDetails, isDropped]);\r\n\r\n  const handleReset = () => {\r\n    // Reset all states related to file upload\r\n    setValidatedData(null);\r\n    setSelectedFiles(null);\r\n    setValidationErrors([]);\r\n    setShowErrorsModal(false);\r\n    setTableData([]);\r\n    setUniqueData([]);\r\n    setCAItemDetailsTable([]);\r\n    setAssignedPlant([]);\r\n    setTableKey(0);\r\n\r\n    setIsFileInputDisabled(false);\r\n\r\n    // Clear the file input value using the ref\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = \"\"; // Reset the file input value\r\n    }\r\n\r\n    // Disable the \"Create Manufacturing CA\" button\r\n    setIsCreateButtonDisabled(true);\r\n\r\n    // Optionally show a toast message\r\n    //showSuccessToast(\"File upload has been reset.\");\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!validatedData) {\r\n      showErrorToast(\"Please upload and validate a file before proceeding.\");\r\n      return;\r\n    }\r\n\r\n    setScreenLoader(true); // Show loader when the process starts\r\n\r\n    // const CAHeaders = await fetchCsrfToken(); // Fetch headers\r\n    try {\r\n      await processManufacturingCA(\r\n        validatedData,\r\n        showSuccessToastWithProgress,\r\n        showErrorToastWithProgress,\r\n        handleReset\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error in handleSubmit:\", error);\r\n    } finally {\r\n      setScreenLoader(false); // Hide loader after the process is complete\r\n    }\r\n\r\n    // Disable the \"Create Manufacturing CA\" button after submission\r\n    setIsCreateButtonDisabled(true);\r\n  };\r\n\r\n  console.log(\"Before template render :: columns ::\", columns);\r\n  console.log(\"Before template render :: tableData ::\", tableData);\r\n\r\n  return (\r\n    <>\r\n      {screenLoader && <Loader />}\r\n      {/* Show DragAndDropComponent initially and if not loading and nothing is dropped */}\r\n      {!isDropped && !loading && !isTableLoading && (\r\n        <div\r\n          style={{\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-between\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <DragAndDropComponent\r\n            handleFileInputChange={handleFileInputChange}\r\n            fileInputRef={fileInputRef}\r\n            isFileInputDisabled={isFileInputDisabled}\r\n            handleSubmit={handleSubmit}\r\n            isCreateButtonDisabled={isCreateButtonDisabled}\r\n            handleReset={handleReset}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Content Wrapper - show if not initially loading or if card data is available */}\r\n      {isDropped && (\r\n        <>\r\n          {/* Show initial loader when loading is true */}\r\n          {loading && <Loader />}\r\n          <div className=\"content-wrapper py-3 border-bottom\">\r\n            <div className=\"d-flex \">\r\n              <div className=\" p-0 pt-4\">\r\n                <Image\r\n                  src=\"https://thewhitechamaleon.github.io/testrapp/images/home.png\"\r\n                  alt=\"home-icon\"\r\n                  className=\"home-icon\"\r\n                  onClick={handleHomeClick}\r\n                />\r\n              </div>\r\n              {/* Always show card data if available */}\r\n              {cardData && (\r\n                <CardWithDragAndDrop\r\n                  data={cardData}\r\n                  widgetType=\"MBOMImpactReport\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Table Loader - show only when isTableLoading is true */}\r\n          {isTableLoading ? (\r\n            <div className=\"loading-indicator mt-5\">{/* <Loader /> */}</div>\r\n          ) : (\r\n            <>\r\n              <div>\r\n                <h3>Part Revisions</h3>\r\n                <h3>MBOM Connections</h3>\r\n                <div\r\n                  className=\"wrapper-cta\"\r\n                  style={{ maxHeight: \"600px\", overflowY: \"auto\" }}\r\n                >\r\n                  <div className=\"table-container\">\r\n                    <MCOImpactReportPartRevTable\r\n                      columns={columns}\r\n                      data={tableData}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"table-container\">\r\n                    <MCOImpactReportMBOMConnectionTable\r\n                      columns={MBOMConnectionColumns}\r\n                      data={tableData}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <ContentErrorsModal\r\n        show={showErrorsModal}\r\n        onHide={() => setShowErrorsModal(false)}\r\n        errors={validationErrors}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MBOMImpactReport;\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../../store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n// import { io } from \"socket.io-client\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../App.css\";\r\nimport \"../../styles/variables.css\";\r\nimport WidgetLifecycle from \"./WidgetLifecycle\";\r\nimport MBOMImpactReport from \"./MBOMImpactReport\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      {/* <WidgetLifecycle /> */}\r\n      <MBOMImpactReport />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\n// Function to inject the refresh listener script into the **parent window**\r\nfunction injectRefreshListener() {\r\n  // console.log(\"🌍 [index.js] Injecting refresh listener into parent window...\");\r\n\r\n  const scriptContent = `\r\n    function listenForRefreshClicks() {\r\n      // console.log(\"🌍 [Parent] Listening for manual refresh clicks...\");\r\n\r\n      document.body.addEventListener(\"click\", function (event) {\r\n        let refreshButton = event.target.closest(\"#refresh\"); // Check if refresh was clicked\r\n\r\n        if (refreshButton) {\r\n          // console.log(\"✅ [Parent] User clicked Refresh!\");\r\n          sessionStorage.setItem(\"userClickedRefresh\", \"true\"); // Store flag\r\n          // console.log(\"Stored Flag:\", sessionStorage.getItem(\"userClickedRefresh\"));\r\n        }\r\n      }, true);\r\n    }\r\n\r\n    // ✅ Ensure event listener is added even if DOM is already loaded\r\n    if (document.readyState === \"loading\") {\r\n      document.addEventListener(\"DOMContentLoaded\", listenForRefreshClicks);\r\n    } else {\r\n      listenForRefreshClicks();\r\n    }\r\n  `;\r\n\r\n  // Inject script **into the parent window**\r\n  if (window.parent && window.parent.document) {\r\n    let injectedScript = window.parent.document.createElement(\"script\");\r\n    injectedScript.textContent = scriptContent;\r\n    window.parent.document.body.appendChild(injectedScript);\r\n    // console.log(\"✅ [index.js] Script successfully injected and executed in parent!\");\r\n  } else {\r\n    console.warn(\"⚠️ [index.js] Unable to inject script—parent window not accessible.\");\r\n  }\r\n}\r\n\r\n// ✅ Inject the script when the React app starts\r\ninjectRefreshListener();\r\n\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n"],"names":["_ref","columns","data","searchText","setSearchText","useState","currentPage","setCurrentPage","filteredData","useMemo","filter","row","some","col","String","accessorKey","toLowerCase","includes","paginatedData","startIndex","slice","totalPages","Math","ceil","length","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","onClick","handleExport","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","bookType","blob","Blob","saveAs","map","header","idx","colSpan","min","disabled","prev","getTableData","tableData","CAData","console","log","ItemName","ItemTitle","ItemRev","ItemType","ItemId","Change","CAName","Plant","title","Seq","Status","PlantStatus","MFGChange","MFGStatus","ChangeStatus","CAStatus","OracleTemplate","MBom","MBOM","handleFileInputChange","fileInputRef","isFileInputDisabled","handleSubmit","isCreateButtonDisabled","handleReset","handleDrop","usePlantDropableArea","performSearch","useInterComSearch","_Fragment","Image","style","width","height","src","alt","class","MBOMImpactReport","showSuccessToastWithProgress","showErrorToastWithProgress","useToastWithProgress","isAddingPlant","setIsAddingPlant","validatedData","setValidatedData","showErrorsModal","setShowErrorsModal","validationErrors","setValidationErrors","initializeDroppableArea","loading","tableKey","setTableKey","setTableData","assignedPlant","setAssignedPlant","selectedFiles","setSelectedFiles","uniqueData","setUniqueData","CAItemDetailsTable","setCAItemDetailsTable","setIsFileInputDisabled","setIsCreateButtonDisabled","isTableLoading","setIsTableLoading","screenLoader","setScreenLoader","isCardDataAvailable","setIsCardDataAvailable","isRemoveMode","setIsRemoveMode","dispatch","useDispatch","showSuccessToast","showErrorToast","useToast","securityContext1","window","widget","getValue","useRef","handleRemovePlant","useCallback","itemId","plantId","item","_objectSpread","ItemPlants","plant","PlantID","color","droppedObjectData","useSelector","state","droppedObject","CAItemDetails","CAItemObjectDetails","loadingParentDetails","isDropped","plantObjectData","useEffect","prevKey","cardData","initialDraggedData","_droppedObjectData$in","_droppedObjectData$in2","items","objectType","newTableData","Title","Type","owner","Owner","Description","imageURL","EIN","getCardData","tableColumns","MBOMConnectionColumns","tableColumnsMBOMConnections","current","Loader","display","flexDirection","justifyContent","position","DragAndDropComponent","event","handleFileChange","finally","async","processManufacturingCA","error","handleHomeClick","setIsDropped","setDroppedObjectData","parentDetails","versions","setPlantObjectData","allPlants","initialAssignedPlants","uniquePlants","productChildren","headers","proposedChanges","setCAItemObjectDetails","CAallPlants","CAisMFGCA","CAheaders","CardWithDragAndDrop","widgetType","maxHeight","overflowY","MCOImpactReportPartRevTable","MCOImpactReportMBOMConnectionTable","ContentErrorsModal","show","onHide","errors","root","hasOnLoadRun","addEvent","warn","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","body","querySelector","document","getElementById","createElement","id","appendChild","ReactDOM","render","Provider","store","ToastContainer","start","parent","injectedScript","textContent","injectRefreshListener"],"sourceRoot":""}